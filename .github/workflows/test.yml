name: Java CI with Maven

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Chequeamos el código fuente desde GitHub
      - name: Check out code
        uses: actions/checkout@v3

      # Establecer la versión de Java (en este caso Java 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'  # También puedes usar 'adoptopenjdk' si prefieres esa distribución

      # Configurar Maven para usar la versión correcta
      - name: Set up Maven
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Caching de dependencias de Maven para mejorar la velocidad de la compilación
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Compilar el proyecto usando Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests

      # Ejecutar las pruebas unitarias
      - name: Run tests with Maven
        run: mvn test

      # Publicar los resultados de las pruebas
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/
  # Aquí asumo que los resultados de las pruebas están en esa carpeta
